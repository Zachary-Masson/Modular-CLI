export const Events = [
  { "title": "applicationCommandPermissionsUpdate", "description": "Triggered when permissions for an application command are updated.", "value": "applicationCommandPermissionsUpdate" },
  { "title": "autoModerationActionExecution", "description": "Triggered when an auto-moderation action is executed.", "value": "autoModerationActionExecution" },
  { "title": "autoModerationRuleCreate", "description": "Triggered when a new auto-moderation rule is created.", "value": "autoModerationRuleCreate" },
  { "title": "autoModerationRuleDelete", "description": "Triggered when an auto-moderation rule is deleted.", "value": "autoModerationRuleDelete" },
  { "title": "autoModerationRuleUpdate", "description": "Triggered when an auto-moderation rule is updated.", "value": "autoModerationRuleUpdate" },
  { "title": "cacheSweep", "description": "Triggered when a cache sweep occurs.", "value": "cacheSweep" },
  { "title": "channelCreate", "description": "Triggered when a new channel is created.", "value": "channelCreate" },
  { "title": "channelDelete", "description": "Triggered when a channel is deleted.", "value": "channelDelete" },
  { "title": "channelPinsUpdate", "description": "Triggered when a message is pinned or unpinned in a channel.", "value": "channelPinsUpdate" },
  { "title": "channelUpdate", "description": "Triggered when a channel is updated.", "value": "channelUpdate" },
  { "title": "debug", "description": "Triggered for general debugging information.", "value": "debug" },
  { "title": "emojiCreate", "description": "Triggered when a new emoji is created.", "value": "emojiCreate" },
  { "title": "emojiDelete", "description": "Triggered when an emoji is deleted.", "value": "emojiDelete" },
  { "title": "emojiUpdate", "description": "Triggered when an emoji is updated.", "value": "emojiUpdate" },
  { "title": "entitlementCreate", "description": "Triggered when a new entitlement is created.", "value": "entitlementCreate" },
  { "title": "entitlementDelete", "description": "Triggered when an entitlement is deleted.", "value": "entitlementDelete" },
  { "title": "entitlementUpdate", "description": "Triggered when an entitlement is updated.", "value": "entitlementUpdate" },
  { "title": "error", "description": "Triggered when an error occurs.", "value": "error" },
  { "title": "guildAuditLogEntryCreate", "description": "Triggered when a new audit log entry is created in a guild.", "value": "guildAuditLogEntryCreate" },
  { "title": "guildAvailable", "description": "Triggered when a guild becomes available.", "value": "guildAvailable" },
  { "title": "guildBanAdd", "description": "Triggered when a user is banned from a guild.", "value": "guildBanAdd" },
  { "title": "guildBanRemove", "description": "Triggered when a user is unbanned from a guild.", "value": "guildBanRemove" },
  { "title": "guildCreate", "description": "Triggered when the client joins a new guild.", "value": "guildCreate" },
  { "title": "guildDelete", "description": "Triggered when the client leaves or is removed from a guild.", "value": "guildDelete" },
  { "title": "guildIntegrationsUpdate", "description": "Triggered when a guild's integrations are updated.", "value": "guildIntegrationsUpdate" },
  { "title": "guildMemberAdd", "description": "Triggered when a new member joins a guild.", "value": "guildMemberAdd" },
  { "title": "guildMemberAvailable", "description": "Triggered when a guild member becomes available.", "value": "guildMemberAvailable" },
  { "title": "guildMemberRemove", "description": "Triggered when a member leaves or is removed from a guild.", "value": "guildMemberRemove" },
  { "title": "guildMembersChunk", "description": "Triggered when a chunk of guild members is received.", "value": "guildMembersChunk" },
  { "title": "guildMemberUpdate", "description": "Triggered when a guild member is updated.", "value": "guildMemberUpdate" },
  { "title": "guildScheduledEventCreate", "description": "Triggered when a guild scheduled event is created.", "value": "guildScheduledEventCreate" },
  { "title": "guildScheduledEventDelete", "description": "Triggered when a guild scheduled event is deleted.", "value": "guildScheduledEventDelete" },
  { "title": "guildScheduledEventUpdate", "description": "Triggered when a guild scheduled event is updated.", "value": "guildScheduledEventUpdate" },
  { "title": "guildScheduledEventUserAdd", "description": "Triggered when a user is added to a guild scheduled event.", "value": "guildScheduledEventUserAdd" },
  { "title": "guildScheduledEventUserRemove", "description": "Triggered when a user is removed from a guild scheduled event.", "value": "guildScheduledEventUserRemove" },
  { "title": "guildUnavailable", "description": "Triggered when a guild becomes unavailable.", "value": "guildUnavailable" },
  { "title": "guildUpdate", "description": "Triggered when a guild is updated.", "value": "guildUpdate" },
  { "title": "interactionCreate", "description": "Triggered when an interaction is created.", "value": "interactionCreate" },
  { "title": "invalidated", "description": "Triggered when the client becomes invalidated.", "value": "invalidated" },
  { "title": "inviteCreate", "description": "Triggered when a new invite is created.", "value": "inviteCreate" },
  { "title": "inviteDelete", "description": "Triggered when an invite is deleted.", "value": "inviteDelete" },
  { "title": "messageCreate", "description": "Triggered when a new message is created.", "value": "messageCreate" },
  { "title": "messageDelete", "description": "Triggered when a message is deleted.", "value": "messageDelete" },
  { "title": "messageDeleteBulk", "description": "Triggered when multiple messages are deleted at once.", "value": "messageDeleteBulk" },
  { "title": "messagePollVoteAdd", "description": "Triggered when a user votes in a message poll.", "value": "messagePollVoteAdd" },
  { "title": "messagePollVoteRemove", "description": "Triggered when a user removes their vote from a message poll.", "value": "messagePollVoteRemove" },
  { "title": "messageReactionAdd", "description": "Triggered when a reaction is added to a message.", "value": "messageReactionAdd" },
  { "title": "messageReactionRemove", "description": "Triggered when a reaction is removed from a message.", "value": "messageReactionRemove" },
  { "title": "messageReactionRemoveAll", "description": "Triggered when all reactions are removed from a message.", "value": "messageReactionRemoveAll" },
  { "title": "messageReactionRemoveEmoji", "description": "Triggered when a specific reaction is removed from a message.", "value": "messageReactionRemoveEmoji" },
  { "title": "messageUpdate", "description": "Triggered when a message is updated.", "value": "messageUpdate" },
  { "title": "presenceUpdate", "description": "Triggered when a user's presence is updated.", "value": "presenceUpdate" },
  { "title": "ready", "description": "Triggered when the client is ready.", "value": "ready" },
  { "title": "roleCreate", "description": "Triggered when a new role is created.", "value": "roleCreate" },
  { "title": "roleDelete", "description": "Triggered when a role is deleted.", "value": "roleDelete" },
  { "title": "roleUpdate", "description": "Triggered when a role is updated.", "value": "roleUpdate" },
  { "title": "shardDisconnect", "description": "Triggered when a shard disconnects.", "value": "shardDisconnect" },
  { "title": "shardError", "description": "Triggered when a shard encounters an error.", "value": "shardError" },
  { "title": "shardReady", "description": "Triggered when a shard becomes ready.", "value": "shardReady" },
  { "title": "shardReconnecting", "description": "Triggered when a shard is reconnecting.", "value": "shardReconnecting" },
  { "title": "shardResume", "description": "Triggered when a shard resumes.", "value": "shardResume" },
  { "title": "stageInstanceCreate", "description": "Triggered when a stage instance is created.", "value": "stageInstanceCreate" },
  { "title": "stageInstanceDelete", "description": "Triggered when a stage instance is deleted.", "value": "stageInstanceDelete" },
  { "title": "stageInstanceUpdate", "description": "Triggered when a stage instance is updated.", "value": "stageInstanceUpdate" },
  { "title": "stickerCreate", "description": "Triggered when a new sticker is created.", "value": "stickerCreate" },
  { "title": "stickerDelete", "description": "Triggered when a sticker is deleted.", "value": "stickerDelete" },
  { "title": "stickerUpdate", "description": "Triggered when a sticker is updated.", "value": "stickerUpdate" },
  { "title": "threadCreate", "description": "Triggered when a new thread is created.", "value": "threadCreate" },
  { "title": "threadDelete", "description": "Triggered when a thread is deleted.", "value": "threadDelete" },
  { "title": "threadListSync", "description": "Triggered when the list of active threads is synchronized.", "value": "threadListSync" },
  { "title": "threadMembersUpdate", "description": "Triggered when the members of a thread are updated.", "value": "threadMembersUpdate" },
  { "title": "threadMemberUpdate", "description": "Triggered when a thread member is updated.", "value": "threadMemberUpdate" },
  { "title": "threadUpdate", "description": "Triggered when a thread is updated.", "value": "threadUpdate" },
  { "title": "typingStart", "description": "Triggered when a user starts typing.", "value": "typingStart" },
  { "title": "userUpdate", "description": "Triggered when a user is updated.", "value": "userUpdate" },
  { "title": "voiceStateUpdate", "description": "Triggered when a user's voice state is updated.", "value": "voiceStateUpdate" },
  { "title": "warn", "description": "Triggered when a warning is received.", "value": "warn" },
  { "title": "webhooksUpdate", "description": "Triggered when a webhook is updated.", "value": "webhooksUpdate" }
]
